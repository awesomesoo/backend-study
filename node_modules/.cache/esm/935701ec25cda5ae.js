let Joi,User;_25c‍.x([["register",()=>register]]);_25c‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_25c‍.w("../../models/user",[["default",["User"],function(v){User=v}]]);/*
 * 회원 인증 API
 */



/*
 * POST /api/auth/register
 *  {
 *    username: ‘velopert‘,
 *    password: ‘mypass123‘
 * }
 */

// 회원가입
       const register = async (ctx) => {
  const schema = Joi.object().keys({
    username: Joi.string().alphanum().min(3).max(20).required(),
    password: Joi.string().required(),
  });

  const result = schema.validate(ctx.request.body);
  if (result.error) {
    ctx.status = 400;
    ctx.body = result.error;
    return;
  }

  const { username, password } = ctx.request.body;
  try {
    // username이 이미 존재하는지 확인
    const exists = await User.findByUsername(username);
    if (exists) {
      ctx.status = 409; // Conflict
      return;
    }
    const user = new User({
      username,
    });
    await user.setPassword(password); // 비밀번호 설정
    await user.save(); // 데이터베이스에 저장

    // 응답할 데이터에서 hashedPassword 필드 제거
    ctx.body = user.serialize();
  } catch (e) {
    ctx.throw(500, e);
  }
};

/* // 로그인
export const login = async (ctx) => {};

// 로그인 상태 확인
export const check = async (ctx) => {};

// 로그아웃
export const logout = async (ctx) => {};
 */
